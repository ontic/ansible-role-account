# This source file is subject to the (Open Source Initiative) BSD license
# that is bundled with this package in the LICENSE file. It is also available
# through the world-wide-web at this URL: http://www.ontic.com.au/license.html
# If you did not receive a copy of the license and are unable to obtain it through
# the world-wide-web, please send an email to license@ontic.com.au immediately.
# Copyright (c) 2010-2015 Ontic. (http://www.ontic.com.au). All rights reserved.

---

- name: Account | Configure groups.
  sudo: yes
  group:
    name: '{{ item.name }}'
    gid: '{{ item.gid | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    system: '{{ item.system | default(omit) }}'
  with_items: account_groups
  tags:
    - configure
    - account

- name: Account | Configure sudo groups.
  sudo: yes
  lineinfile:
    regexp: '^%{{ item.name }}\s*ALL\='
    line: '%{{ item.name }} ALL=(ALL) NOPASSWD:ALL'
    dest: /etc/sudoers
    create: true
    owner: root
    group: root
    mode: 0440
    state: "{{ item.sudoer | ternary('present', 'absent') }}"
    validate: 'visudo -cf %s'
  with_items: account_groups
  when: item.sudoer is defined
  tags:
    - configure
    - account

- name: Account | Configure users.
  sudo: yes
  user:
    name: '{{ item.name }}'
    append: '{{ item.append | default(omit) }}'
    comment: '{{ item.comment | default(omit) }}'
    createhome: '{{ item.createhome | default(omit) }}'
    expires: '{{ item.expires | default(omit) }}'
    force: '{{ item.force | default(omit) }}'
    generate_ssh_key: '{{ item.generate_ssh_key | default(omit) }}'
    group: '{{ item.group | default(item.name) }}'
    groups: "{{ item.groups | join(',') if item.groups is defined else '' }}"
    home: '{{ item.home | default(omit) }}'
    login_class: '{{ item.login_class | default(omit) }}'
    move_home: '{{ item.move_home | default(omit) }}'
    non_unique: '{{ item.non_unique | default(omit) }}'
    password: '{{ item.password | default(omit) }}'
    remove: '{{ item.remove | default(omit) }}'
    shell: '{{ item.shell | default(omit) }}'
    skeleton: '{{ item.skeleton | default(omit) }}'
    ssh_key_bits: '{{ item.ssh_key_bits | default(omit) }}'
    ssh_key_comment: '{{ item.ssh_key_comment | default(omit) }}'
    ssh_key_file: '{{ item.ssh_key_file | default(omit) }}'
    ssh_key_passphrase: '{{ item.ssh_key_passphrase | default(omit) }}'
    ssh_key_type: '{{ item.ssh_key_type | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    system: '{{ item.system | default(omit) }}'
    uid: '{{ item.uid | default(omit) }}'
    update_password: '{{ item.update_password | default(omit) }}'
  with_items: account_users
  tags:
    - configure
    - account

- name: Account | Configure sudo users.
  sudo: yes
  lineinfile:
    regexp: '^{{ item.name }}\s*ALL\='
    line: '{{ item.name }} ALL=(ALL) NOPASSWD:ALL'
    dest: /etc/sudoers
    create: true
    owner: root
    group: root
    mode: 0440
    state: "{{ item.sudoer | ternary('present', 'absent') }}"
    validate: 'visudo -cf %s'
  with_items: account_users
  when: item.sudoer is defined
  tags:
    - configure
    - account

- name: Account | Configure authorized keys.
  sudo: yes
  authorized_key:
    user: '{{ item.0.name }}'
    exclusive: '{{ item.1.exclusive | default(omit) }}'
    key: '{{ item.1.key }}'
    key_options: '{{ item.1.key_options | default(omit) }}'
    manage_dir: '{{ item.1.manage_dir | default(omit) }}'
    state: '{{ item.1.state | default(omit) }}'
  with_subelements:
    - account_users
    - authorized_keys
  tags:
    - configure
    - account